DROP PROCEDURE IF EXISTS UpdatedBestsellers;

DELIMITER $$

CREATE PROCEDURE UpdatedBestsellers(id INT)
BEGIN
    DECLARE BOOKRENTS INT DEFAULT 0;
    DECLARE BOOL_VALUE BOOLEAN DEFAULT FALSE;
    DECLARE TTL, IS_BESTSELLER VARCHAR(30);

    SELECT TITLE, BESTSELLER FROM BOOKS WHERE BOOK_ID = id INTO TTL, IS_BESTSELLER;
    SELECT COUNT(*) FROM RENTS WHERE BOOK_ID = id INTO BOOKRENTS;
    IF BOOKRENTS >= 2 THEN
        SET BOOL_VALUE = TRUE;
    END IF;

    IF BOOL_VALUE = FALSE THEN
        SET IS_BESTSELLER = 'false';
    ELSE
        SET IS_BESTSELLER = 'true';
    END IF;

    SELECT TTL, BOOKRENTS, IS_BESTSELLER;
END $$

DELIMITER ;

CALL UpdatedBestsellers(1);

-------------------------------------------------------------------------------

USE kodilla_course;

DROP PROCEDURE IF EXISTS UpdatedBestsellers;

DELIMITER $$
CREATE PROCEDURE UpdatedBestsellers()
BEGIN
    DECLARE BOOKRENTS, FINISHED INT DEFAULT 0;
    DECLARE BK_ID INT;
    #DECLARE BOOL_VALUE BOOLEAN DEFAULT FALSE;

    DECLARE ALL_BOOKS CURSOR FOR SELECT BOOK_ID FROM books;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    OPEN ALL_BOOKS;
    WHILE (FINISHED = 0)
        DO
            FETCH ALL_BOOKS INTO BK_ID;

            IF (FINISHED = 0) THEN
                SET BOOKRENTS = 0;
                SELECT COUNT(*) FROM RENTS WHERE BOOK_ID = BK_ID INTO BOOKRENTS;

                IF BOOKRENTS >= 2 THEN
                    UPDATE books SET BESTSELLER = TRUE WHERE BOOK_ID = BK_ID;
                    COMMIT;
                ELSE
                    UPDATE books SET BESTSELLER = FALSE WHERE BOOK_ID = BK_ID;
                    COMMIT;
                END IF;

            END IF;
        END WHILE;
    CLOSE ALL_BOOKS;
END $$

DELIMITER ;

CALL UpdatedBestsellers();

SELECT *
FROM books;